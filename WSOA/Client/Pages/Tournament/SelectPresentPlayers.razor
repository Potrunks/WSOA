@page "/tournament/select/players/{TournamentId:int}"
@using WSOA.Client.Pages.Tournament.Components;
@using WSOA.Client.Shared.Buttons.Main
@using WSOA.Client.Shared.Buttons.Resources;
@using WSOA.Client.Shared.Loaders
@using WSOA.Client.Shared.Resources;
@using WSOA.Shared.ViewModel;
@inherits SelectPresentPlayersComponent

@if (IsLoading)
{
    <CardCoinLoader />
}
else
{
    <div class="c-selectPlayers__container-main">
        <div class="c-selectPlayers__container-sub">
            <div class="c-selectPlayers__title">@MainLabelResources.PRESENT_PLAYERS</div>
            <div class="c-selectPlayers__container-players">
                @foreach (PlayerViewModel model in SelectedPlayers)
                {
                    <div class="c-selectPlayers__container-player">
                        <img src="@(model.HasPaid ? "images/pay_cash_bill.png" : "images/error_logo.png")" onclick="@(() => SwitchPaymentStatus.InvokeAsync(model))" />
                        <div class="c-selectPlayers__label-playerFullName">@model.FirstName @model.LastName.ToUpper()</div>
                        <img src="images/trash_bin.png" onclick="@(() => UnSelectPlayer.InvokeAsync(model))" />
                    </div>
                }
                <div class="c-selectPlayers__panelButtons-addPlayer">
                    <div class="c-selectPlayer__icon-blank" />
                    <div class="c-selectPlayers__label">@ButtonLabelResources.ADD_PLAYERS</div>
                    <img src="images/add_player.png" onclick="@(() => OpenSelectablePlayersPopup.InvokeAsync())" />
                </div>
            </div>
        </div>
        <div class="c-selectPlayers__panelButtons">
            <MainButton IsPrimary="true" Label="@ButtonLabelResources.VALIDATE" Type="button" OnClick="() => OnValidSelectedPlayers.InvokeAsync()"/>
        </div>
    </div>
}
